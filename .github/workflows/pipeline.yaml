name: Deploy Backend and Frontend to Server

on:
  push:
    branches:
      - main

  pull_request:
    branches-ignore:
      - "**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Run linter for backend
        run: cd backend && npm run lint

      - name: Create .env.test file
        run: echo "${{ secrets.ENV_TEST }}" > backend/.env.test

      - name: Run test for backend
        run: cd backend && npm run test:all

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Run linter for frontend
        run: cd frontend && npm run lint

      - name: Build project backend
        run: cd backend && npm run build

      - name: Build project frontend
        run: cd frontend && npm run build

      - name: Prepare SSH key and known_hosts for deploy
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          ssh-keyscan akphotography.fi >> ~/.ssh/known_hosts

      - name: Remove old frontend dist folder from server
        run: |
          ssh -i ~/.ssh/private_key chgqkclj@akphotography.fi 'if [ -d "public_html/dist" ]; then rm -rf public_html/dist; fi'

      - name: Copy backend files to server
        run: |
          rsync -avz -e "ssh -i ~/.ssh/private_key" ./backend/apps/ak_photography_backend/ chgqkclj@akphotography.fi:apps/ak_photography_backend/

      - name: Copy backend node_modules
        run: |
          rsync -avz -e "ssh -i ~/.ssh/private_key" ./backend/node_modules/ chgqkclj@akphotography.fi:apps/ak_photography_backend/node_modules/

      - name: Copy backend package.json to server
        run: |
          rsync -avz -e "ssh -i ~/.ssh/private_key" ./backend/package.json chgqkclj@akphotography.fi:apps/ak_photography_backend/

      - name: Copy frontend files to server
        run: |
          rsync -avz -e "ssh -i ~/.ssh/private_key" ./frontend/dist/ chgqkclj@akphotography.fi:public_html/dist/

      - name: Create .env file on server
        run: |
          ssh -i ~/.ssh/private_key chgqkclj@akphotography.fi "echo '${{ secrets.ENV_FILE }}' > apps/ak_photography_backend/.env && chmod 600 apps/ak_photography_backend/.env"

      - name: Copy PM2 ecosystem config
        run: |
          rsync -avz -e "ssh -i ~/.ssh/private_key" ./backend/ecosystem.config.cjs chgqkclj@akphotography.fi:apps/ak_photography_backend/

      - name: Restart Node.js app
        run: |
          ssh -i ~/.ssh/private_key chgqkclj@akphotography.fi "cd apps/ak_photography_backend && pm2 restart ecosystem.config.cjs --env production || pm2 start ecosystem.config.cjs --env production"

      - name: Create tag
        id: create_tag
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d.%H%M%S')"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Delete old tags (keep last 3)
        run: |
          git fetch --tags

          # Get all tags sorted by creation date (newest first), skip first 3
          TAGS_TO_DELETE=$(git tag --sort=-creatordate | grep '^v' | tail -n +4)

          for TAG in $TAGS_TO_DELETE; do
            echo "Deleting tag: $TAG"
            git push --delete origin "$TAG" || true
            git tag -d "$TAG" || true
          done

      - name: Cleanup deploy SSH key
        if: always()
        run: |
          rm -f ~/.ssh/private_key

  rollback:
    needs: deploy
    if: failure() && needs.deploy.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare SSH key and known_hosts for rollback
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          ssh-keyscan akphotography.fi >> ~/.ssh/known_hosts

      - name: Rollback to previous tag if deploy fails
        run: |
          echo "Rolling back..."
          git fetch --tags
          PREVIOUS_TAG=$(git tag --sort=-creatordate | grep '^v' | sed -n 2p)

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found â€” cannot rollback."
            exit 1
          fi

          echo "Rolling back to tag: $PREVIOUS_TAG"

          git checkout "$PREVIOUS_TAG"

          cd backend && npm ci && npm run build
          cd ../frontend && npm ci && npm run build          

          cd ../backend
          ls -la
          rsync -avz -e "ssh -i ~/.ssh/private_key" apps/ak_photography_backend/ chgqkclj@akphotography.fi:apps/ak_photography_backend/
          cd ../frontend
          ls -la
          rsync -avz -e "ssh -i ~/.ssh/private_key" dist/ chgqkclj@akphotography.fi:public_html/dist/

          ssh -i ~/.ssh/private_key chgqkclj@akphotography.fi "cd apps/ak_photography_backend && pm2 restart ecosystem.config.cjs --env production"

      - name: Cleanup rollback SSH key
        if: always()
        run: |
          rm -f ~/.ssh/private_key
